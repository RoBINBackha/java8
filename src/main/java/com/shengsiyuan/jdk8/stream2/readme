1、collect方法在jdk8 stream流中是一个极其重要的方法，重要性至少排在前3位，学好collect对我们编写正确的程序的思想极为有帮助

1.collect：收集器
2.Collector作为collect方法的参数
3.Collector是一个接口，它是一个可变的汇聚操作，将输入元素累积到一个可变的结果容器中；
  它会在所有元素都处理完毕后，将累计的结果转换成为一个最终的表示（这是一个可选操作）；
  它支持串、并行方式执行。
4.Collectors辅助类是一个工厂，提供了很多常见的可变的汇聚操作的实现
5.Collector本身是由4个函数构成，这四个函数将条目累积到一个结果容器当中，还可以对结果执行最终的转换
    ① supplier：创建并返回一个新的可变的结果容器（就是那个最终的结果容器）
    ② accumulator：将一个新的数据元素处理into(folds)到那个结果容器中
    ③ combiner：将2个结果容器合并成一个（并发的时候用的）
    ④ finisher：将中间的累积类型执行最终的转换成结果类型
6.为了确保串行与并行结果的相同（对于无序收集器，无须内容的顺序相同），Collector函数需要满足2个条件：同一性(identity)、结合性(associativity)
    ①identity：任何部分累积的结果和一个空容器合并，必须产生一个等价的结果(a == combiner.apply(a, supplier.get()))
    ②associatity：分割的累计值必须产生一个等价结果（和没分割的对比）。
7.一旦结果被传递给combiner或finisher后，它就再也不可能被传递给accumulator了


可变的汇聚操作：
    1、将元素累积到一个Collection当中
    2、用StringBuilder将字符串连接起来
    3、计算关于元素的求和、最小大值、平均值等等汇总信息
    4、分组、分区
    5、Collectors辅助类是一个工厂，提供了很多常见的可变的汇聚操作的实现

reduce和collect的区别：
    reduce：生成的结果不可变性（单线程情况下，通过可变的方式使用它不出错，但多线程会出错）
    collect：可变性（arraylist等）